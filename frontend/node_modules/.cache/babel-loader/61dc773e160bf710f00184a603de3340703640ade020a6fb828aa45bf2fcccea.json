{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pakog\\\\Documents\\\\Horarios\\\\frontend\\\\src\\\\pages\\\\JefeCarreraDashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Container, Typography, Button, Box, Grid, Card, CardContent, CardActions, Alert, CircularProgress } from '@mui/material';\nimport { scheduleService } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JefeCarreraDashboard = ({\n  usuario\n}) => {\n  _s();\n  var _usuario$carrera;\n  const [profesores, setProfesores] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [generating, setGenerating] = useState(false);\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const profesoresFileRef = useRef(null);\n  const materiasFileRef = useRef(null);\n  useEffect(() => {\n    loadProfesores();\n\n    // Crear elementos input programÃ¡ticamente para evitar problemas de JSX\n    const profesoresInput = document.createElement('input');\n    profesoresInput.type = 'file';\n    profesoresInput.accept = '.xlsx,.xls';\n    profesoresInput.style.display = 'none';\n    profesoresInput.onchange = handleProfesorFileChange;\n    profesoresFileRef.current = profesoresInput;\n    document.body.appendChild(profesoresInput);\n    const materiasInput = document.createElement('input');\n    materiasInput.type = 'file';\n    materiasInput.accept = '.xlsx,.xls';\n    materiasInput.style.display = 'none';\n    materiasInput.onchange = handleMateriaFileChange;\n    materiasFileRef.current = materiasInput;\n    document.body.appendChild(materiasInput);\n    return () => {\n      // Cleanup\n      if (profesoresFileRef.current && document.body.contains(profesoresFileRef.current)) {\n        document.body.removeChild(profesoresFileRef.current);\n      }\n      if (materiasFileRef.current && document.body.contains(materiasFileRef.current)) {\n        document.body.removeChild(materiasFileRef.current);\n      }\n    };\n  }, []);\n  const loadProfesores = async () => {\n    if (!usuario.id_carrera) return;\n    setLoading(true);\n    try {\n      const data = await scheduleService.getProfesoresByCarrera(usuario.id_carrera);\n      setProfesores(data);\n    } catch (err) {\n      setError('Error al cargar profesores');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleGenerateSchedule = async () => {\n    if (!usuario.id_carrera) return;\n    setGenerating(true);\n    setError('');\n    setMessage('');\n    try {\n      const request = {\n        id_carrera: usuario.id_carrera\n      };\n      const response = await scheduleService.generateSchedule(request);\n      if (response.success) {\n        setMessage(`Horarios generados exitosamente para ${response.generated_schedules.length} grupos`);\n      } else {\n        setError(response.message);\n      }\n    } catch (err) {\n      setError('Error al generar horarios');\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const handleFileUpload = async (file, type) => {\n    if (!usuario.id_carrera) return;\n    setLoading(true);\n    try {\n      let result;\n      if (type === 'profesores') {\n        result = await scheduleService.importProfesores(usuario.id_carrera, file);\n      } else {\n        result = await scheduleService.importMaterias(usuario.id_carrera, file);\n      }\n      if (result.success) {\n        setMessage(`${result.message}. ${result.errors.length > 0 ? `Errores: ${result.errors.length}` : ''}`);\n        if (type === 'profesores') {\n          loadProfesores();\n        }\n      } else {\n        setError(result.message);\n      }\n    } catch (err) {\n      setError(`Error al importar ${type}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleProfesorFileSelect = () => {\n    if (profesoresFileRef.current) {\n      profesoresFileRef.current.click();\n    }\n  };\n  const handleMateriaFileSelect = () => {\n    if (materiasFileRef.current) {\n      materiasFileRef.current.click();\n    }\n  };\n  const handleProfesorFileChange = e => {\n    var _target$files;\n    const target = e.target;\n    const file = (_target$files = target.files) === null || _target$files === void 0 ? void 0 : _target$files[0];\n    if (file) handleFileUpload(file, 'profesores');\n  };\n  const handleMateriaFileChange = e => {\n    var _target$files2;\n    const target = e.target;\n    const file = (_target$files2 = target.files) === null || _target$files2 === void 0 ? void 0 : _target$files2[0];\n    if (file) handleFileUpload(file, 'materias');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: [\"Panel de \", ((_usuario$carrera = usuario.carrera) === null || _usuario$carrera === void 0 ? void 0 : _usuario$carrera.nombre) || 'Jefe de Carrera']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), message && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"success\",\n        sx: {\n          mb: 2\n        },\n        onClose: () => setMessage(''),\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mb: 2\n        },\n        onClose: () => setError(''),\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Importar Datos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  sx: {\n                    mb: 1\n                  },\n                  onClick: handleProfesorFileSelect,\n                  children: \"Importar Profesores (.xlsx)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  fullWidth: true,\n                  onClick: handleMateriaFileSelect,\n                  children: \"Importar Materias (.xlsx)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Generar Horarios\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                paragraph: true,\n                children: \"Genera autom\\xE1ticamente los horarios para todos los grupos de la carrera. Se crear\\xE1n 2 versiones de horario por cada grupo.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleGenerateSchedule,\n                disabled: generating || profesores.length === 0,\n                fullWidth: true,\n                children: generating ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 33\n                }, this) : 'Generar Horarios'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: [\"Profesores de la Carrera (\", profesores.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: profesores.map(profesor => /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 4,\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    variant: \"outlined\",\n                    children: /*#__PURE__*/_jsxDEV(CardContent, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"subtitle2\",\n                        children: profesor.nombre_completo\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 246,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        display: \"block\",\n                        children: [profesor.numero_empleado, \" - \", profesor.tipo_profesor]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 245,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 244,\n                    columnNumber: 25\n                  }, this)\n                }, profesor.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(JefeCarreraDashboard, \"C9P+s0y1barFULzmDaOIfDM3mdo=\");\n_c = JefeCarreraDashboard;\nexport default JefeCarreraDashboard;\nvar _c;\n$RefreshReg$(_c, \"JefeCarreraDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Container","Typography","Button","Box","Grid","Card","CardContent","CardActions","Alert","CircularProgress","scheduleService","jsxDEV","_jsxDEV","JefeCarreraDashboard","usuario","_s","_usuario$carrera","profesores","setProfesores","loading","setLoading","generating","setGenerating","message","setMessage","error","setError","profesoresFileRef","materiasFileRef","loadProfesores","profesoresInput","document","createElement","type","accept","style","display","onchange","handleProfesorFileChange","current","body","appendChild","materiasInput","handleMateriaFileChange","contains","removeChild","id_carrera","data","getProfesoresByCarrera","err","handleGenerateSchedule","request","response","generateSchedule","success","generated_schedules","length","handleFileUpload","file","result","importProfesores","importMaterias","errors","handleProfesorFileSelect","click","handleMateriaFileSelect","e","_target$files","target","files","_target$files2","maxWidth","children","sx","mt","mb","variant","gutterBottom","carrera","nombre","fileName","_jsxFileName","lineNumber","columnNumber","severity","onClose","container","spacing","item","xs","md","fullWidth","onClick","color","paragraph","disabled","size","map","profesor","sm","nombre_completo","numero_empleado","tipo_profesor","id","_c","$RefreshReg$"],"sources":["C:/Users/pakog/Documents/Horarios/frontend/src/pages/JefeCarreraDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Container,\r\n  Typography,\r\n  Button,\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  CardActions,\r\n  Alert,\r\n  CircularProgress,\r\n  Fab\r\n} from '@mui/material';\r\nimport { Add as AddIcon } from '@mui/icons-material';\r\nimport { scheduleService } from '../services/api';\r\nimport { Profesor, ScheduleGenerationRequest } from '../types';\r\nimport ScheduleGrid from '../components/ScheduleGrid';\r\n\r\ninterface JefeCarreraDashboardProps {\r\n  usuario: any; // Se puede definir tipo mÃ¡s especÃ­fico\r\n}\r\n\r\nconst JefeCarreraDashboard = ({ usuario }: JefeCarreraDashboardProps) => {\r\n  const [profesores, setProfesores] = useState<Profesor[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [generating, setGenerating] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [error, setError] = useState('');\r\n  const profesoresFileRef = useRef<HTMLInputElement | null>(null);\r\n  const materiasFileRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    loadProfesores();\r\n    \r\n    // Crear elementos input programÃ¡ticamente para evitar problemas de JSX\r\n    const profesoresInput = document.createElement('input');\r\n    profesoresInput.type = 'file';\r\n    profesoresInput.accept = '.xlsx,.xls';\r\n    profesoresInput.style.display = 'none';\r\n    profesoresInput.onchange = handleProfesorFileChange;\r\n    profesoresFileRef.current = profesoresInput;\r\n    document.body.appendChild(profesoresInput);\r\n\r\n    const materiasInput = document.createElement('input');\r\n    materiasInput.type = 'file';\r\n    materiasInput.accept = '.xlsx,.xls';\r\n    materiasInput.style.display = 'none';\r\n    materiasInput.onchange = handleMateriaFileChange;\r\n    materiasFileRef.current = materiasInput;\r\n    document.body.appendChild(materiasInput);\r\n\r\n    return () => {\r\n      // Cleanup\r\n      if (profesoresFileRef.current && document.body.contains(profesoresFileRef.current)) {\r\n        document.body.removeChild(profesoresFileRef.current);\r\n      }\r\n      if (materiasFileRef.current && document.body.contains(materiasFileRef.current)) {\r\n        document.body.removeChild(materiasFileRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const loadProfesores = async () => {\r\n    if (!usuario.id_carrera) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const data = await scheduleService.getProfesoresByCarrera(usuario.id_carrera);\r\n      setProfesores(data);\r\n    } catch (err: any) {\r\n      setError('Error al cargar profesores');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateSchedule = async () => {\r\n    if (!usuario.id_carrera) return;\r\n    \r\n    setGenerating(true);\r\n    setError('');\r\n    setMessage('');\r\n    \r\n    try {\r\n      const request: ScheduleGenerationRequest = {\r\n        id_carrera: usuario.id_carrera\r\n      };\r\n      \r\n      const response = await scheduleService.generateSchedule(request);\r\n      \r\n      if (response.success) {\r\n        setMessage(`Horarios generados exitosamente para ${response.generated_schedules.length} grupos`);\r\n      } else {\r\n        setError(response.message);\r\n      }\r\n    } catch (err: any) {\r\n      setError('Error al generar horarios');\r\n    } finally {\r\n      setGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = async (file: File, type: 'profesores' | 'materias') => {\r\n    if (!usuario.id_carrera) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      let result;\r\n      if (type === 'profesores') {\r\n        result = await scheduleService.importProfesores(usuario.id_carrera, file);\r\n      } else {\r\n        result = await scheduleService.importMaterias(usuario.id_carrera, file);\r\n      }\r\n      \r\n      if (result.success) {\r\n        setMessage(`${result.message}. ${result.errors.length > 0 ? `Errores: ${result.errors.length}` : ''}`);\r\n        if (type === 'profesores') {\r\n          loadProfesores();\r\n        }\r\n      } else {\r\n        setError(result.message);\r\n      }\r\n    } catch (err: any) {\r\n      setError(`Error al importar ${type}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleProfesorFileSelect = () => {\r\n    if (profesoresFileRef.current) {\r\n      profesoresFileRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleMateriaFileSelect = () => {\r\n    if (materiasFileRef.current) {\r\n      materiasFileRef.current.click();\r\n    }\r\n  };\r\n\r\n  const handleProfesorFileChange = (e: Event) => {\r\n    const target = e.target as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n    if (file) handleFileUpload(file, 'profesores');\r\n  };\r\n\r\n  const handleMateriaFileChange = (e: Event) => {\r\n    const target = e.target as HTMLInputElement;\r\n    const file = target.files?.[0];\r\n    if (file) handleFileUpload(file, 'materias');\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mt: 4, mb: 4 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Panel de {usuario.carrera?.nombre || 'Jefe de Carrera'}\r\n        </Typography>\r\n        \r\n        {message && (\r\n          <Alert severity=\"success\" sx={{ mb: 2 }} onClose={() => setMessage('')}>\r\n            {message}\r\n          </Alert>\r\n        )}\r\n        \r\n        {error && (\r\n          <Alert severity=\"error\" sx={{ mb: 2 }} onClose={() => setError('')}>\r\n            {error}\r\n          </Alert>\r\n        )}\r\n\r\n        <Grid container spacing={3}>\r\n          {/* SecciÃ³n de importaciÃ³n */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Importar Datos\r\n                </Typography>\r\n                <Box sx={{ mb: 2 }}>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    sx={{ mb: 1 }}\r\n                    onClick={handleProfesorFileSelect}\r\n                  >\r\n                    Importar Profesores (.xlsx)\r\n                  </Button>\r\n                </Box>\r\n                <Box>\r\n                  <Button\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    onClick={handleMateriaFileSelect}\r\n                  >\r\n                    Importar Materias (.xlsx)\r\n                  </Button>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* SecciÃ³n de generaciÃ³n */}\r\n          <Grid item xs={12} md={6}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Generar Horarios\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" paragraph>\r\n                  Genera automÃ¡ticamente los horarios para todos los grupos de la carrera.\r\n                  Se crearÃ¡n 2 versiones de horario por cada grupo.\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleGenerateSchedule}\r\n                  disabled={generating || profesores.length === 0}\r\n                  fullWidth\r\n                >\r\n                  {generating ? <CircularProgress size={24} /> : 'Generar Horarios'}\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </Grid>\r\n\r\n          {/* Lista de profesores */}\r\n          <Grid item xs={12}>\r\n            <Card>\r\n              <CardContent>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Profesores de la Carrera ({profesores.length})\r\n                </Typography>\r\n                {loading ? (\r\n                  <CircularProgress />\r\n                ) : (\r\n                  <Grid container spacing={2}>\r\n                    {profesores.map((profesor) => (\r\n                      <Grid item xs={12} sm={6} md={4} key={profesor.id}>\r\n                        <Card variant=\"outlined\">\r\n                          <CardContent>\r\n                            <Typography variant=\"subtitle2\">\r\n                              {profesor.nombre_completo}\r\n                            </Typography>\r\n                            <Typography variant=\"caption\" display=\"block\">\r\n                              {profesor.numero_empleado} - {profesor.tipo_profesor}\r\n                            </Typography>\r\n                          </CardContent>\r\n                        </Card>\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default JefeCarreraDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}